const rawDataOfficial = 
String.raw`                                       U         R     Q     F           T C   J                                         
                                       S         E     V     C           Q G   C                                         
  #####################################.#########.#####.#####.###########.#.###.#######################################  
  #...#...................#.........#.......#.....#.#...#...#.#...#.......#.#...#...#.#.........#.#.#.....#...#...#.#.#  
  #.#.###.#.###.#.#######.###.###.#.###.#####.#.###.#.###.#.#.#.#####.###.#.#.#.#.###.#.#########.#.#.#.###.###.###.#.#  
  #.#...#.#...#.#.#...#.......#...#...#.#.#...#...#.......#.#.....#...#.....#.#...#.................#.#.#.#.#...#.....#  
  #####.#########.###.###.#####.###.#.#.#.###.#############.###.###.#.#####.#.#.###.#####.#.#.###.#####.#.#.###.###.###  
  #.......#.........#.....#.#...#...#.......#.....#.#.....#.#...#.#.#.....#.#.#.....#.#...#.#.#.#.#.....#.....#.#.....#  
  #####.#.###.###.###.#.###.###.#.###.#.#.#####.#.#.###.#.#.#.###.###.#######.#.#####.#.#.#####.#.#####.###.###.#.#.#.#  
  #.#...#.#.#.#.#.#...#.#.....#.#.#...#.#...#...#...#...#...#.......#...#.#.#.#.#.....#.#.......#.#.......#.#.....#.#.#  
  #.###.###.###.#.#####.#.###.#########.#.#.###.#.#.#.###.#####.#.#####.#.#.#.###.#####.###.###.#####.#.#.#.###.#######  
  #...#.........#.#.#...#.#...........#.#.#.#...#.#.#.#...#.#...#.....#.....#...#.#.#.#.#.#...#.#.#...#.#...#.#...#...#  
  ###.###.#####.###.###########.#.###.###.#########.#.#####.###.#########.###.###.#.#.#.#.#######.#######.###.#.###.#.#  
  #.......#.#.#.........#.#.#...#...#...#.......#.#.#.#.#...........#.....#.........#...#.....#.#...#.#...#.......#.#.#  
  #####.#.#.#.#.###.###.#.#.#.#######.#.#.#.#.###.#.#.#.###.###.#######.#####.#.#########.#####.#.###.#.#####.###.###.#  
  #.#...#.#...#.#...#.#...#.......#...#...#.#.#.....#.....#.#.......#.#...#.#.#...............#...#.#...#.......#...#.#  
  #.#########.#######.###.###########.###.#########.#.#.#.#########.#.#.###.#.#.#####.#.#.#####.###.#.#.#.#.#########.#  
  #.......#.#...#.#.....#.#.#...#.....#.....#.......#.#.#.#...#.....#.....#...#.#.#...#.#.#.......#.#.#.#.#...#.#.#.#.#  
  ###.#####.###.#.#####.#.#.###.#####.###.#.#####.#.#.#######.#.#.#.###.#####.#.#.###.#####.###.#.#.###.###.###.#.#.#.#  
  #...#...#.#.#.#.#.#.#...#.#.......#...#.#.#.....#.#.....#.....#.#.#.......#.#.....#.#.#.#...#.#.#.....#.#.#.....#.#.#  
  ###.#.###.#.#.#.#.#.#.###.###.#.#.#.#.#######.###.###.#.#.#.#######.###.#####.#####.#.#.#.#.#########.#.#.###.###.#.#  
  #.....#.#.......#...#.#.#.#...#.#...#.#...#...#.#.#...#.#.#.#.#...#.#.#.#.#...#.#.#.#...#.#.#.#.......#.#...........#  
  ###.###.#######.###.#.#.#.#####.#.#.#####.#####.#.#.#######.#.###.#.#.###.#.###.#.###.###.###.###.###.#.#.#########.#  
  #...#...#.#.#.............#...#.#.#.#.#...#.#.#.#.#.......#.......#.......#...#.........#...#.#.#.#...............#.#  
  ###.###.#.#.#######.#.#.#.###.#####.#.#.###.#.#.#.#######.###.###.#######.#.#####.#######.###.#.#.#######.#.#########  
  #...#...#.....#.#...#.#.#.#...#...#.....#...#.....#.........#.#...#.....#.#.....#...#.#.#.......#.#.......#.........#  
  #.#.###.###.###.#########.###.#.#######.#.#######.#.#########.###.#.#.###.#.#####.###.#.###.#########.#.#.#########.#  
  #.#.#...........#.#...#.#...#.........#...#.#.....#.#.....#.#.#...#.#.....#.#.................#.#.#.#.#.#.....#.#.#.#  
  ###.###.#.#.#####.###.#.###.###.###.#.###.#.#.#####.#.###.#.#####.#.#######.#.###.#####.#######.#.#.#.###.#####.#.###  
  #...#.#.#.#...#.#.#.#...........#...#.....#...#...#...#.#.....#...#.......#...#.......#.....#...#...#.#.#.........#.#  
  #.#.#.###.#####.#.#.#####.#.#.#####.#####.#.#####.#####.#.#.#####.#######.#####.###.#######.###.#.#####.#.#########.#  
  #.#.#.#...#.#...#...#.#...#.#.#.#.....#.#.#.........#.#...#.....#.#.........#.....#.......#.#...#...#.#.#.........#.#  
  #.###.###.#.###.#.###.#########.###.#.#.#########.###.#.#.#.#.###.###.#########.###.#.#.#######.#.###.#.#.#########.#  
  #...#...#.#.#...#.....#.#.....#...#.#.....#.......#.....#.#.#.#...#.......#.......#.#.#...#.#...#...#.#.#...#.#.....#  
  #.###.#.#.#.#.###.#.###.#####.#.#########.#.#######.###########.###.###.#####.#######.#.###.#.#.###.#.#.#.###.###.###  
  #.#.#.#...#.#...#.#.......#.#.#.#        B J       D           B   E   B     O      #.#.#...#.#.#.#.#.#...#.#.#.....#  
  #.#.###.#.#.###.#####.#.###.#.#.#        M B       Z           Z   P   C     K      #####.#.###.#.#.#.###.#.#.###.###  
  #...#.#.#.....#.#.#.#.#.#.#.#...#                                                   #...#.#.....#...........#.....#.#  
  #.###.###.#####.#.#.###.#.#.#.#.#                                                   #.#####.###.#.#####.###.#.###.#.#  
  #.....#...#.#.....#...#.......#.#                                                   #.......#...#.#.#.....#...#......MZ
  #####.#.#.#.###.###.#######.###.#                                                   ###.#.###.###.#.###.###.#.###.#.#  
ZR......#.#...#.........#.....#....FC                                               HM..#.#.#.#...#...#.#...#.#.#...#.#  
  #.###.###.#.#.#######.###.#####.#                                                   #.#.###.###.#.###.#.#.#########.#  
  #.#.......#.....#.........#...#.#                                                   #...#.#.#.#.....#.#.#...#.....#.#  
  #.###.#.#####################.###                                                   #####.#.#.#######.#####.#####.###  
  #.#...#.#.....#...#.#.#.......#.#                                                   #.#...........#...#...#.#........ZZ
  #########.#.#.###.#.#.###.###.#.#                                                   #.#.#.#####.#####.###.###.#######  
  #.#.......#.#.#.#.#.......#.#...#                                                   #...#...#...#.#.#...#.#.........#  
  #.###.#####.###.#.#.#.#####.###.#                                                   #.###.###.###.#.#.#.#.#########.#  
  #...#.....#.#.....#.#.#.........#                                                 QV..#...#.......#.#.#...#.#.....#..BZ
  #.#######.#.###.#.#.#####.#######                                                   #.#########.###.#.###.#.#.###.#.#  
HM..........#.....#.......#........TQ                                                 #...#.#.#.........#.#.....#.....#  
  #.#.#############################                                                   #####.#.###########.#####.#.#####  
  #.#.#.#.......#...........#.....#                                                   #.................#.....#.#.#.#..OK
  #####.#####.#.#.#.###.###.###.#.#                                                   #.#.#.###.###.#.#.#.#########.#.#  
AA..#.....#.#.#...#...#...#.#...#.#                                                 US..#.#...#.#...#.#.....#.....#...#  
  #.#.#####.#.#############.#.#.#.#                                                   #.###.#######.#.#####.#.###.#.###  
EK....#.....#...#.......#.#.#.#.#..UG                                                 #.#.#.#.#.....#.#.....#.#...#...#  
  ###.###.#.#.#####.#####.#.#.###.#                                                   #.#.###.###########.###.#.#####.#  
  #.......#...#...#.....#.....#...#                                                   #.#.....#...#.#.#.......#.......#  
  #.#############.#.###############                                                   #####.###.###.#.#################  
  #.#...........................#.#                                                   #...................#............II
  ###.###.#.#.#.###.#.#######.###.#                                                   #.#.#####.#########.#.###.#.###.#  
  #.#...#.#.#.#.#.#.#.#.........#.#                                                 SJ..#...#.....#...#.#...#...#...#.#  
  #.#.#####.#####.#.#########.###.#                                                   #############.###.#####.#########  
UG......#.....#...#.#...#...#.#....QM                                               KI..............#.......#...#.#...#  
  #.#.#.#.#####.#####.#####.#.#.###                                                   #.###.###.###.#.#####.#.###.###.#  
  #.#.#.#.#...#...#.....#...#.....#                                                   #.#.....#.#.....#.....#.#.....#.#  
  #########.###.###.#####.#######.#                                                   #.###.###.###.###.#########.#.#.#  
  #.#.......#...................#.#                                                   #.#.#.#...#.....#.#...#.....#....EP
  #.#####.#.#.#####.#.#.#.#.###.###                                                   #.#.###.###.#####.#.#.#####.#.#.#  
  #.......#.#...#...#.#.#.#.#.#...#                                                   #.....#...#...#.....#.......#.#.#  
  #.#.#####.#.###.###.###.###.#.###                                                   #.#.#.###########.#######.#######  
  #.#...#.#.#...#.#...#...#........NU                                                 #.#.#.#.#.....#.#.#.....#.#...#.#  
  #####.#.#.#.#########.#.#####.###                                                   #######.#####.#.###.###.###.#.#.#  
BC......#.......#...#.#.#.#...#...#                                                   #...#...#.#.....#.....#.....#....KI
  ###############.###.#####.#.###.#                                                   ###.###.#.#.#.#.#####.#####.###.#  
  #...........#...........#.#.#.#.#                                                   #.#.#.#.#...#.#.#.......#...#...#  
  #.#######.#.#.###.#.#####.###.#.#                                                   #.#.#.#.#.#.#.###.###.#######.###  
  #.......#.#...#.#.#.....#...#.#.#                                                 ZC..........#.#.......#.#...#...#.#  
  #.###.#####.#.#.###.#####.###.###                                                   #.###.#.#.#####.#####.###.#####.#  
  #...#...#.#.#...#.......#.#...#..RK                                                 #...#.#.#.#.#.......#.#.....#....SJ
  #.#######.#.#.#######.###.###.#.#                                                   #########.#.###.#.#.#####.#.###.#  
ZC....#...#.#.#...#.#.#...........#                                                 JC....#.#.#.#...#.#.#.#.#.#.#...#.#  
  #######.#.#######.#.###.###.#####                                                   #.#.#.#.###.#########.#.#.###.#.#  
NU......#...#...#...#...#.#.#.#.#..RE                                                 #.#...#.......#...#.#.#...#...#.#  
  #.#####.###.#.#.#.#.#.###.###.#.#                                                   ###.#######.#.#.###.#.#.###.###.#  
  #...........#...#...#...........#                                                   #...........#.............#.....#  
  #.#.###.#.###.#####.#####.#.#.###      W         E     Z   C         I     M        ###.#.#.#.#.###.###.###.#.#.###.#  
  #.#.#.#.#...#...#...#.....#.#...#      Z         K     R   G         I     Z        #...#.#.#.#.#...#...#...#.#.#...#  
  ###.#.###.#####.###.#.###.#.#.#.#######.#########.#####.###.#########.#####.#########.#.#.#.#.#############.###.#####  
  #.....#.#.#.#.#.#...#.#...#.#.#...#.#.#.#.#.......#.#.#...#.......#.....#...........#.#.#.#.#.....#.........#.......#  
  ###.#.#.#.#.#.#####.#####.#.#######.#.#.#.#.#######.#.###.###.#####.#.#.###.#####.#####.#####.#.#####.###.#.#####.###  
  #...#.#.........#...#.#...#.#.#.#.#...#...#.......#.....#...#...#...#.#.#.#.#.#.....#.....#...#.#.#...#...#.....#...#  
  #.#.###.###.###.#.#.#.#####.#.#.#.###.###.#######.#.###.#.#####.###.#####.###.#.#############.#.#.#######.#.#.#.###.#  
  #.#.#...#.....#.#.#.....#...#.....#.#.........#...#...#.....#...#.....#...#.#.......#...#...#.#.#.#.#.....#.#.#...#.#  
  #.#####.###.#.###.###.###########.#.#.#####.#####.#.#####.###.#####.#####.#.#####.###.###.#######.#.#####.#####.#####  
  #.#.....#...#.#.#.#.#.#.#.................#.#.#...#.#.#.....#.....#.....#.#.....#.......#.....#...#...#...#.......#.#  
  #.###.#.#.#.###.###.#.#.#####.###.###.#######.#.#.#.#.#.###.#.#.#.#.#.###.#.###.#.#.#.###.#######.#.###.#.#.#.#.###.#  
  #.#.#.#.#.#.....#.......#.......#.#...#.#.#.....#.#...#.#.#.#.#.#.#.#.#.......#...#.#.......#.........#.#.#.#.#.....#  
  #.#.#########.#.###.#.#####.###.#.###.#.#.#.#.###.#.#####.#######.#.###.#.#.#.#######.#######.#####.#####.###.#.#.#.#  
  #.........#...#.#...#.#.......#.#...#.#...#.#.#...#.....#.........#...#.#.#.#.....#...............#...#.....#.#.#.#.#  
  #.#############.###.###.#.#######.###.#.#.#######.#.###.#####.###.#.#############.###.#.#####.#.###.#.#.#####.###.#.#  
  #.....#...#.#...#.#.#.#.#.#.#.#.#.#.....#.#.#.....#...#.#.......#.#...#...#.....#...#.#.....#.#.#...#.#.#.#.....#.#.#  
  #.###.#.###.#####.###.#####.#.#.#.###.#####.###.###.#####.#.###.###.#####.#.###.#.###########.###.#.###.#.###.#######  
  #.#.#.....#.........#.#.........#.#...#.#...#.#.#.#.#...#.#...#...#.#.#.....#.#.......#.....#...#.#...#.....#.......#  
  #.#.#.#####.#.#.###.#.#####.#.#.#.###.#.###.#.#.#.#.###.###.#####.#.#.#####.#######.###.###.#####.#.###.#######.###.#  
  #...#...#...#.#.#.#.....#...#.#.#.#.....#.........#.......#.#...#.#...#.#.......#.#.......#.....#.#...#.#...#.....#.#  
  #.#.#.#####.#####.#.#.#####.###.#######.###.#.###.#######.#####.#.###.#.###.#####.###.#.#############.###.###.###.#.#  
  #.#.#.....#...#.....#.....#.#...#...#...#.#.#.#.#...#.......#.#...#.#.#...#.........#.#.....#.#.............#.#.#.#.#  
  #.#.###.#########.#######.#####.###.###.#.#.###.#####.###.#.#.#.###.#.#.#.###.#.###.#.#.#.#.#.#.###.#####.#.#.#.#.###  
  #.#.#...#.........#.#...................#.......#.......#.#.#...#.#...#.#.#...#...#.#.#.#.#.#...#.......#.#.#.#.....#  
  #.#####.#####.###.#.###.###.###.#.###.###.#.###.#######.#.#####.#.#.###.#.#.###.#########.#######.###.#######.###.#.#  
  #.#.....#.#...#.#.#.....#...#...#.#.....#.#...#.#.......#.#.......#...#.#.#...#.......#.#.....#.....#.#.#.#.....#.#.#  
  #####.###.#.###.#.#.#.#.###.###.#.###.#####.#####.###.###########.#.#.#.#.#.###.###.#.#.#########.###.#.#.###.###.###  
  #.......#...#.....#.#.#.#...#...#.#.#.#.#.....#.#.#.....#.......#.#.#...#.#...#.#...#.#.#.#...#.#.#...#...#.....#.#.#  
  #.#######.###.###.#######.#####.#.#.#.#.#.###.#.#####.#.#.#######.#######.#.###########.#.###.#.###.###.#########.#.#  
  #.#.....#.#.....#...#.#...#...#.#.#.....#.#.......#.#.#.....#...#.#.....#.#.....#...............#.......#.#...#.#...#  
  #######.###.#########.###.#.#.#####.#.#####.###.#.#.#####.###.###.#.###.#.#.#####.#.#####.#.###.#########.#.###.#.#.#  
  #.............#.......#...#.#.....#.#.#.#.....#.#.#.......#.......#...#.#.#...#.#.#.#.#...#.#.....#.#...........#.#.#  
  #.#####.#####.###.###.###########.###.#.###.#.###.###.###.#.#######.#.#.#.#.###.#.###.###.#.#######.#.###.#.#.#####.#  
  #...#.....#...#.....#.....................#.#...#.#.....#.#.......#.#.#...#.............#.#.............#.#.#.....#.#  
  #######################################.#######.#######.#########.###.#######.#######################################  
                                         B       J       R         Q   D       W                                         
                                         M       B       K         M   Z       Z                                          `.split("\n");

const rawDataExample = String.raw
`             Z L X W       C                 
             Z P Q B       K                 
  ###########.#.#.#.#######.###############  
  #...#.......#.#.......#.#.......#.#.#...#  
  ###.#.#.#.#.#.#.#.###.#.#.#######.#.#.###  
  #.#...#.#.#...#.#.#...#...#...#.#.......#  
  #.###.#######.###.###.#.###.###.#.#######  
  #...#.......#.#...#...#.............#...#  
  #.#########.#######.#.#######.#######.###  
  #...#.#    F       R I       Z    #.#.#.#  
  #.###.#    D       E C       H    #.#.#.#  
  #.#...#                           #...#.#  
  #.###.#                           #.###.#  
  #.#....OA                       WB..#.#..ZH
  #.###.#                           #.#.#.#  
CJ......#                           #.....#  
  #######                           #######  
  #.#....CK                         #......IC
  #.###.#                           #.###.#  
  #.....#                           #...#.#  
  ###.###                           #.#.#.#  
XF....#.#                         RF..#.#.#  
  #####.#                           #######  
  #......CJ                       NM..#...#  
  ###.#.#                           #.###.#  
RE....#.#                           #......RF
  ###.###        X   X       L      #.#.#.#  
  #.....#        F   Q       P      #.#.#.#  
  ###.###########.###.#######.#########.###  
  #.....#...#.....#.......#...#.....#.#...#  
  #####.#.###.#######.#######.###.###.#.#.#  
  #.......#.......#.#.#.#.#...#...#...#.#.#  
  #####.###.#####.#.#.#.#.###.###.#.###.###  
  #.......#.....#.#...#...............#...#  
  #############.#.#.###.###################  
               A O F   N                     
               A A D   M                      `.split("\n");

var rawData = rawDataExample;
								
var gMaze;
var gWarps;
var gXS, gYS;
// -1 : wall, -2 : empty, -3 : ZZ space >= 0 : warp DESTINATION ! (except AA and ZZ)
const WALL = -1;								
const EMPTY =-2;								
const GOAL = -3;								
								
function getChar(p_x, p_y) {
	return rawData[p_y].charAt(p_x);
}	
								
function init() {
	var coorsWithLetters = [];
	var xHoleMin = rawData[0].length;
	var xHoleMax = 0;
	var yHoleMin = rawData.length;
	var yHoleMax = 0;
	gMaze = generateArrangedDoubleEntryArray(rawData[0].length, rawData.length, function(p_x, p_y) {
		if (isUppercaseLetter(getChar(p_x, p_y)) ) {
			coorsWithLetters.push({x : p_x, y : p_y});
		}
		if (getChar(p_x, p_y) == ' ' && p_x > 2 && p_x < rawData[0].length-3 && p_y > 2 && p_y < rawData.length-3) {
			xHoleMin = Math.min(p_x, xHoleMin);
			xHoleMax = Math.max(p_x, xHoleMax);
			yHoleMin = Math.min(p_y, yHoleMin);
			yHoleMax = Math.max(p_y, yHoleMax);
		}
		return (rawData[p_y].charAt(p_x) == '.') ? EMPTY : WALL;
	});
	// Find the warps
	gWarps = [];
	var nbPairs = 0;
	var x, y, xW, yW, name;
	for (var i = 0 ; i < coorsWithLetters.length ; i++) {
		x = coorsWithLetters[i].x;
		y = coorsWithLetters[i].y;
		xW = -1;
		if (y == 0 || y == yHoleMax-1) {
			name = getChar(x, y)+getChar(x, y+1);
			xW = x;
			yW = y+2;
		}
		if (x == 0 || x == xHoleMax-1) {
			name = getChar(x, y)+getChar(x+1, y);
			xW = x+2;
			yW = y;
		}
		if (x == rawData[0].length-1 || x == xHoleMin+1) {
			name = getChar(x-1, y)+getChar(x, y);
			xW = x-2;
			yW = y;
		}
		if (y == rawData.length-1 || y == yHoleMin+1) {
			name = getChar(x, y-1)+getChar(x, y);
			xW = x;
			yW = y-2;
		}
		if (xW != -1) {
			gWarps.push({name : name, x : xW, y : yW, ready : false});
			nbPairs++;
		}
	}
	var warpI, warpJ;
	for (var i = 0 ; i < gWarps.length ; i++) {
		warpI = gWarps[i];
		if (warpI.name == 'AA') {
			gXS = warpI.x;
			gYS = warpI.y;
		} else if (warpI.name == 'ZZ') {
			gMaze[warpI.y][warpI.x] = GOAL;
		}
		if (!warpI.ready) {
			for (var j = i+1 ; j < gWarps.length ; j++) {
				if (gWarps[j].name == gWarps[i].name) {
					warpJ = gWarps[j];
					gMaze[warpJ.y][warpJ.x] = i;
					gMaze[warpI.y][warpI.x] = j;
					warpI.ready = true;
					warpJ.ready = true;
				}
			}
		}
	}
}

function conclusion_20_1() {
	init();
	return findDistance();	
}

// C/P from day 15 with a twist :)
function findDistance() {
	var coors;
	var dx, dy;
	var newSpacesToAnalyze;
	var spacesToAnalyze = [{x : gXS, y : gYS}];
	var arrayDistance = generateDoubleEntryArray(rawData[0].length, rawData.length, -1);
	var distance = 0;
	while (spacesToAnalyze.length > 0) {
		newSpacesToAnalyze = [];
		for (var i = 0 ; i < spacesToAnalyze.length ; i++) {
			coors = spacesToAnalyze[i]; // Note : no need to check for edges due to the nature of the maze.
			for (var dir = 0 ; dir <= 3 ; dir++) {			// High conventions : Directions 0123 assumption. Replaced forEach so we can return here.
				dx = coors.x+DeltaX[dir];
				dy = coors.y+DeltaY[dir];
				if (gMaze[dy][dx] != WALL && arrayDistance[dy][dx] == -1) {
					arrayDistance[dy][dx] = distance+1;
					newSpacesToAnalyze.push({x : dx, y : dy});
				}
				if (gMaze[dy][dx] == GOAL) {
					return distance+1;
				}
			}
			if (gMaze[coors.y][coors.x] >= 0) { // Note : distance is NOT on goal, and destination is always an empty space.
				dx = gWarps[gMaze[coors.y][coors.x]].x;
				dy = gWarps[gMaze[coors.y][coors.x]].y;
				if (arrayDistance[dy][dx] == -1) {					
					arrayDistance[dy][dx] = distance+1;
					newSpacesToAnalyze.push({x : dx, y : dy});	
				}
			}
		};
		spacesToAnalyze = [];
		copiesCoorsList(newSpacesToAnalyze, spacesToAnalyze);
		distance++;
	}
	return -1;	
}

// -------------

function initInOutWarps() {
	for (var i = 0 ; i < gWarps.length ; i++) {
		gWarps[i].outside = (gWarps[i].x == 2 || gWarps[i].x == gMaze[0].length-3 || gWarps[i].y == 2 || gWarps[i].y == gMaze.length-3); //MISTAKE : For a while I put "-2" instead of -3 for rightmost and downmost teleporters which made them "inside" ... well !
	}
}

var LEVEL_MAX = 20;
function conclusion_20_2() {
	init();
	initInOutWarps();
	LEVEL_MAX = 20;
	var answer;
	do {
		answer = findDistanceP2();	
		LEVEL_MAX = Math.floor(LEVEL_MAX*3/2);
	}
	while (answer == -1);
	return answer;
}

function findDistanceP2() {
	var coors;
	var dx, dy;
	var newSpacesToAnalyze;
	var spacesToAnalyze = [{x : gXS, y : gYS, level : 0}];
	var arrayDistance = [generateDoubleEntryArray(rawData[0].length, rawData.length, -1)];
	var distance = 0;
	var warpDest;
	var spacesNotAnalyzedBecauseTooDeep = [];
	while (spacesToAnalyze.length > 0) {
		newSpacesToAnalyze = [];
		for (var i = 0 ; i < spacesToAnalyze.length ; i++) {
			coors = spacesToAnalyze[i]; // Note : no need to check for edges due to the nature of the maze.
			for (var dir = 0 ; dir <= 3 ; dir++) {			// High conventions : Directions 0123 assumption. Replaced forEach so we can return here.
				dx = coors.x+DeltaX[dir];
				dy = coors.y+DeltaY[dir];
				if (gMaze[dy][dx] != WALL && arrayDistance[coors.level][dy][dx] == -1) {
					arrayDistance[coors.level][dy][dx] = distance+1;
					newSpacesToAnalyze.push({x : dx, y : dy, level : coors.level});
				}
				if (gMaze[dy][dx] == GOAL && coors.level == 0) {
					return distance+1;
				}
			}
			if (gMaze[coors.y][coors.x] >= 0) { // Note : distance is NOT on goal, and destination is always an empty space.
				warpDest = gWarps[gMaze[coors.y][coors.x]];
				dx = warpDest.x;
				dy = warpDest.y;
				if (warpDest.outside) {	// We are going inside (because destination is outside) !				
					if (coors.level < LEVEL_MAX) {						
						if (coors.level == arrayDistance.length-1) {
							arrayDistance.push(generateDoubleEntryArray(rawData[0].length, rawData.length, -1));
						}
						if (arrayDistance[coors.level+1][dy][dx] == -1) {					
							arrayDistance[coors.level+1][dy][dx] = distance+1;
							newSpacesToAnalyze.push({x : dx, y : dy, level : coors.level+1});	
						}
					} else {
						spacesNotAnalyzedBecauseTooDeep.push({x : dx, y : dy, level : LEVEL_MAX+1, distance : distance});
					}
				} else if (coors.level > 0) { // We are going outside !
					if (arrayDistance[coors.level-1][dy][dx] == -1) {					
						arrayDistance[coors.level-1][dy][dx] = distance+1;
						newSpacesToAnalyze.push({x : dx, y : dy, level : coors.level-1});	
					}					
				}
			}
		};
		spacesToAnalyze = [];
		for (var i = 0 ; i < newSpacesToAnalyze.length ; i++) {
			coors = newSpacesToAnalyze[i];
			spacesToAnalyze.push({x : coors.x, y : coors.y, level : coors.level});
		}
		distance++;
	}
	return -1;	
}

