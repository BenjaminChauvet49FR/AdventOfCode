
r3 = 1;
while (true) {
	r1 = 1;
	while(true) {	
		r3*r1 = r5;
		if (r5 == r4) {
			r0 += r3;
		}
		r1++
		if (r1 > r4) {
			r3++;
		} else {
			continue;
		}
		if (r3 > r4) {
			return r0;
		}
		break;
	}
}
// For each divider r3 of r4, we have one occurence of r0 += 3.
// Including r4 itself.
// So the answer is 3 times the # of dividers of 10551394.
// So ... 10551394 = 14*753671 = 2*7*167*4513 (ty google) : 48

Actualaly, it's the sum of R3 that divide R4, so the sum of dividers of R3 !
So ... 3*8*168*4514 = 18200448

"addi 2 16 2", 1 0 17 0 0 0
"seti 1 . 3", - - 2 1 - -
"seti 1 . 1", - - 3 1 - -
"mulr 3 1 5", - - 4 1 - 1
"eqrr 5 4 5", - - 5 1 - (0/1)
"addr 5 2 2", - - 6 1 - (0/1)
"addi 2 1 2", 
"addr 3 0 0", (r4 == r5 => r0 += r3 )
"addi 1 1 1", (r1++)
"gtrr 1 4 5", 
"addr 2 5 2", 
"seti 2 . 2", 
"addi 3 1 3", (r1 > r4 : r3++ & r1 = 1) 
"gtrr 3 4 5", 
"addr 5 2 2",
"seti 1 . 2",
"mulr 2 2 2", (r3 > r4 : exit)
"addi 4 2 4", 1 0 18 0 2 0
"mulr 4 4 4", 1 0 19 0 4 0
"mulr 2 4 4", 1 0 20 0 76 0
"muli 4 11 4", 1 0 21 0 836 0
"addi 5 7 5", 1 0 22 0 836 7
"mulr 5 2 5", 1 0 23 0 836 154
"addi 5 4 5", 1 0 24 0 836 158
"addr 4 5 4", 1 0 25 0 994 158
"addr 2 0 2", 1 0 27 0 994 158
"seti 0 . 2", 
"setr 2 1 5", 1 0 28 0 994 27
"mulr 5 2 5", 1 0 29 0 994 756
"addr 2 5 5", 1 0 30 0 994 785
"mulr 2 5 5", 1 0 31 0 994 23550
"muli 5 14 5", 1 0 32 0 994 329700
"mulr 5 2 5", 1 0 33 0 994 10550400
"addr 4 5 4", 1 0 34 0 10551394 10550400
"seti 0 . 0", 0 0 35 0 10551394 10550400
"seti 0 . 2", 0 0 1 0 10551394 10550400

Exit : first multiple of 3 above 10551394... ? so 10551396 ...
Nooo... Not 10551395 either !

